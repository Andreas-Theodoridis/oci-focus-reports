--------------------------------------------------------
--  File created - Monday-June-23-2025   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table AI_AGENT_CONFIG
--------------------------------------------------------
CREATE TABLE AI_AGENT_CONFIG (
  config_key   VARCHAR2(100) PRIMARY KEY,
  config_value VARCHAR2(4000)
);
--------------------------------------------------------
--  DDL for Table AI_CHAT_LOG
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."AI_CHAT_LOG" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"CHAT_ID" NUMBER, 
	"APP_USER" VARCHAR2(255) COLLATE "USING_NLS_COMP", 
	"SESSION_ID" VARCHAR2(255) COLLATE "USING_NLS_COMP", 
	"USER_MESSAGE" CLOB COLLATE "USING_NLS_COMP", 
	"GENERATED_SQL" CLOB COLLATE "USING_NLS_COMP", 
	"EXECUTION_DATA" CLOB COLLATE "USING_NLS_COMP", 
	"RAW_RESPONSE" CLOB COLLATE "USING_NLS_COMP", 
	"SUMMARY_TEXT" CLOB COLLATE "USING_NLS_COMP", 
	"REASONED_MESSAGE" CLOB COLLATE "USING_NLS_COMP", 
	"CREATED_AT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
  ALTER TABLE "OCI_FOCUS_REPORTS"."AI_CHAT_LOG" ADD PRIMARY KEY ("ID")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  DDL for Table AI_CHAT_LOG_REASONING
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."AI_CHAT_LOG_REASONING" 
   (	"ID" NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"CHAT_ID" NUMBER, 
	"LOG_ID" NUMBER, 
	"INPUT_MESSAGE" CLOB COLLATE "USING_NLS_COMP", 
	"REPHRASED_OUTPUT" CLOB COLLATE "USING_NLS_COMP", 
	"ATTEMPT_NUMBER" NUMBER, 
	"APP_USER" VARCHAR2(255) COLLATE "USING_NLS_COMP", 
	"CREATED_AT" TIMESTAMP (6) DEFAULT SYSTIMESTAMP
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
  ALTER TABLE "OCI_FOCUS_REPORTS"."AI_CHAT_LOG_REASONING" ADD PRIMARY KEY ("ID")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  DDL for Table COST_USAGE_TIMESERIES_DAILY
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."COST_USAGE_TIMESERIES_DAILY" 
   (	"DATE_BUCKET" DATE,
	"BILLINGACCOUNTID" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"SUBACCOUNTNAME" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"INVOICEISSUER" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"REGION" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"BILLINGCURRENCY" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"SERVICECATEGORY" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"SERVICENAME" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"CHARGEDESCRIPTION" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
	"RESOURCETYPE" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"RESOURCEID" VARCHAR2(400) COLLATE "USING_NLS_COMP",
  "RESOURCENAME" VARCHAR2(1000) COLLATE "USING_NLS_COMP",
	"SKUID" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"PRICINGUNIT" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"OCI_COMPARTMENTID" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
	"OCI_COMPARTMENTNAME" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
  "OCI_COMPARTMENT_PATH" VARCHAR2(4000) COLLATE "USING_NLS_COMP",
	"USAGEUNIT" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"COST" NUMBER(20,6), 
	"USAGE" NUMBER(20,6), 
	"LAST_REFRESH" DATE
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
--------------------------------------------------------
--  DDL for Table COST_USAGE_TIMESERIES_WEEKLY
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."COST_USAGE_TIMESERIES_WEEKLY" 
   (	"DATE_BUCKET" DATE, 
	"BILLINGACCOUNTID" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"SUBACCOUNTNAME" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"INVOICEISSUER" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"REGION" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"BILLINGCURRENCY" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"SERVICECATEGORY" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"SERVICENAME" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"CHARGEDESCRIPTION" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
	"RESOURCETYPE" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"RESOURCEID" VARCHAR2(400) COLLATE "USING_NLS_COMP",
  "RESOURCENAME" VARCHAR2(1000) COLLATE "USING_NLS_COMP",
	"SKUID" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"PRICINGUNIT" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"OCI_COMPARTMENTID" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
	"OCI_COMPARTMENTNAME" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
  "OCI_COMPARTMENT_PATH" VARCHAR2(4000) COLLATE "USING_NLS_COMP",
	"USAGEUNIT" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"COST" NUMBER(20,6), 
	"USAGE" NUMBER(20,6), 
	"LAST_REFRESH" DATE
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
--------------------------------------------------------
--  DDL for Table COST_USAGE_TIMESERIES_MONTHLY
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."COST_USAGE_TIMESERIES_MONTHLY" 
   (	"DATE_BUCKET" DATE, 
	"BILLINGACCOUNTID" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"SUBACCOUNTNAME" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"INVOICEISSUER" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"REGION" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"BILLINGCURRENCY" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"SERVICECATEGORY" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"SERVICENAME" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"CHARGEDESCRIPTION" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
	"RESOURCETYPE" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"RESOURCEID" VARCHAR2(400) COLLATE "USING_NLS_COMP",
  "RESOURCENAME" VARCHAR2(1000) COLLATE "USING_NLS_COMP",
	"SKUID" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"PRICINGUNIT" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"OCI_COMPARTMENTID" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
	"OCI_COMPARTMENTNAME" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
  "OCI_COMPARTMENT_PATH" VARCHAR2(4000) COLLATE "USING_NLS_COMP",
	"USAGEUNIT" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"COST" NUMBER(20,6), 
	"USAGE" NUMBER(20,6), 
	"LAST_REFRESH" DATE
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
--------------------------------------------------------
--  DDL for Table CREDIT_USAGE_AGG
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."CREDIT_USAGE_AGG" 
   (	"BILLINGACCOUNTID" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"CHARGEPERIODEND" DATE, 
	"BILLEDCOST" NUMBER, 
	"HOURLY_COST" NUMBER, 
	"INSERTED_AT" DATE DEFAULT SYSDATE
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
--------------------------------------------------------
--  DDL for Table FOCUS_REPORTS_PY
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."FOCUS_REPORTS_PY" 
   (	"AVAILABILITYZONE" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"BILLEDCOST" NUMBER, 
	"BILLINGACCOUNTID" NUMBER, 
	"BILLINGACCOUNTNAME" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"BILLINGCURRENCY" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"BILLINGPERIODEND" TIMESTAMP (6), 
	"BILLINGPERIODSTART" TIMESTAMP (6), 
	"CHARGECATEGORY" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"CHARGEDESCRIPTION" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"CHARGEFREQUENCY" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"CHARGEPERIODEND" TIMESTAMP (6), 
	"CHARGEPERIODSTART" TIMESTAMP (6), 
	"CHARGESUBCATEGORY" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"COMMITMENTDISCOUNTCATEGORY" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"COMMITMENTDISCOUNTID" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"COMMITMENTDISCOUNTNAME" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"COMMITMENTDISCOUNTTYPE" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"EFFECTIVECOST" NUMBER, 
	"INVOICEISSUER" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"LISTCOST" NUMBER, 
	"LISTUNITPRICE" NUMBER, 
	"PRICINGCATEGORY" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"PRICINGQUANTITY" NUMBER, 
	"PRICINGUNIT" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"PROVIDER" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"PUBLISHER" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"REGION" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"RESOURCEID" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"RESOURCENAME" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"RESOURCETYPE" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"SERVICECATEGORY" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"SERVICENAME" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"SKUID" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"SKUPRICEID" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"SUBACCOUNTID" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"SUBACCOUNTNAME" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"TAGS" CLOB COLLATE "USING_NLS_COMP", 
	"USAGEQUANTITY" NUMBER, 
	"USAGEUNIT" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"OCI_REFERENCENUMBER" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"OCI_COMPARTMENTID" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"OCI_COMPARTMENTNAME" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"OCI_OVERAGEFLAG" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"OCI_UNITPRICEOVERAGE" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"OCI_BILLEDQUANTITYOVERAGE" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"OCI_COSTOVERAGE" VARCHAR2(32767) COLLATE "USING_NLS_COMP", 
	"OCI_ATTRIBUTEDUSAGE" NUMBER, 
	"OCI_ATTRIBUTEDCOST" NUMBER, 
	"OCI_BACKREFERENCENUMBER" VARCHAR2(4000) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" 
  PARTITION BY RANGE ("CHARGEPERIODSTART") INTERVAL (NUMTOYMINTERVAL(1, 'MONTH')) 
 (PARTITION "P_BEFORE_2024"  VALUES LESS THAN (TIMESTAMP' 2024-01-01 00:00:00') ) ;
 CREATE INDEX "OCI_FOCUS_REPORTS"."IDX_CREDIT_AGG_BILLING" ON "OCI_FOCUS_REPORTS"."CREDIT_USAGE_AGG" ("BILLINGACCOUNTID", "CHARGEPERIODEND") 
  ;

  CREATE INDEX "OCI_FOCUS_REPORTS"."IDX_FOCUS_REPORTS_OCI_REF" ON "OCI_FOCUS_REPORTS"."FOCUS_REPORTS_PY" ("OCI_REFERENCENUMBER") 
  ;

  CREATE INDEX "OCI_FOCUS_REPORTS"."IDX_FRP_CPE" ON "OCI_FOCUS_REPORTS"."FOCUS_REPORTS_PY" ("CHARGEPERIODEND") 
  ;

  CREATE INDEX "OCI_FOCUS_REPORTS"."IDX_FRP_BAID_CPE" ON "OCI_FOCUS_REPORTS"."FOCUS_REPORTS_PY" ("BILLINGACCOUNTID", "CHARGEPERIODEND") 
  ;
--------------------------------------------------------
--  DDL for Table OCI_AVAILABILITY_METRICS_PY
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."OCI_AVAILABILITY_METRICS_PY" 
   (	"RESOURCEDISPLAYNAME" VARCHAR2(64) COLLATE "USING_NLS_COMP", 
	"TIMESTAMP" TIMESTAMP (6), 
	"NAMESPACE" VARCHAR2(64) COLLATE "USING_NLS_COMP", 
	"COMPARTMENT_ID" VARCHAR2(256) COLLATE "USING_NLS_COMP", 
	"VALUE" NUMBER, 
	"METRIC_NAME" VARCHAR2(128) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" 
  PARTITION BY RANGE ("TIMESTAMP") INTERVAL (NUMTOYMINTERVAL(1, 'MONTH')) 
 (PARTITION "OCI_AVAILABILITY_METRICS_PY_BEFORE_2022"  VALUES LESS THAN (TIMESTAMP' 2022-01-01 00:00:00') ) ;
--------------------------------------------------------
--  DDL for Table OCI_COMPARTMENTS_PY
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."OCI_COMPARTMENTS_PY" 
   (	"COMPARTMENT_ID" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"NAME" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"DESCRIPTION" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"LIFECYCLE_STATE" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"TIME_CREATED" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"PARENT_ID" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"PARENT" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"PATH" VARCHAR2(4000) COLLATE "USING_NLS_COMP", 
	"TENANCY_ID" VARCHAR2(2000) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
--------------------------------------------------------
--  DDL for Table OCI_EXA_MAINTENANCE_PY
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."OCI_EXA_MAINTENANCE_PY" 
   (	"ID" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"COMPARTMENT_ID" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"CURRENT_CUSTOM_ACTION_TIMEOUT_IN_MINS" NUMBER, 
	"CURRENT_PATCHING_COMPONENT" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"CUSTOM_ACTION_TIMEOUT_IN_MINS" NUMBER, 
	"DATABASE_SOFTWARE_IMAGE_ID" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"DESCRIPTION" VARCHAR2(10000) COLLATE "USING_NLS_COMP", 
	"DISPLAY_NAME" VARCHAR2(500) COLLATE "USING_NLS_COMP", 
	"ESTIMATED_DB_SERVER_PATCHING_TIME" NUMBER, 
	"ESTIMATED_NETWORK_SWITCHES_PATCHING_TIME" NUMBER, 
	"ESTIMATED_STORAGE_SERVER_PATCHING_TIME" NUMBER, 
	"TOTAL_ESTIMATED_PATCHING_TIME" NUMBER, 
	"IS_CUSTOM_ACTION_TIMEOUT_ENABLED" VARCHAR2(10) COLLATE "USING_NLS_COMP", 
	"IS_DST_FILE_UPDATE_ENABLED" VARCHAR2(10) COLLATE "USING_NLS_COMP", 
	"IS_MAINTENANCE_RUN_GRANULAR" VARCHAR2(10) COLLATE "USING_NLS_COMP", 
	"LIFECYCLE_DETAILS" VARCHAR2(10000) COLLATE "USING_NLS_COMP", 
	"LIFECYCLE_STATE" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"MAINTENANCE_SUBTYPE" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"MAINTENANCE_TYPE" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"PATCH_FAILURE_COUNT" NUMBER, 
	"PATCH_ID" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"PATCHING_END_TIME" TIMESTAMP (6), 
	"PATCHING_MODE" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"PATCHING_START_TIME" TIMESTAMP (6), 
	"PATCHING_STATUS" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"PEER_MAINTENANCE_RUN_ID" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"PEER_MAINTENANCE_RUN_IDS" CLOB COLLATE "USING_NLS_COMP", 
	"TARGET_DB_SERVER_VERSION" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"TARGET_RESOURCE_ID" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"TARGET_RESOURCE_TYPE" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"TARGET_STORAGE_SERVER_VERSION" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"TIME_ENDED" TIMESTAMP (6), 
	"TIME_SCHEDULED" TIMESTAMP (6), 
	"TIME_STARTED" TIMESTAMP (6), 
	"TOTAL_TIME_TAKEN_IN_MINS" NUMBER
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
--------------------------------------------------------
--  DDL for Table OCI_RESOURCES_PY
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."OCI_RESOURCES_PY" 
   (	"DISPLAY_NAME" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"IDENTIFIER" VARCHAR2(1000) COLLATE "USING_NLS_COMP", 
	"REGION" VARCHAR2(60) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
--------------------------------------------------------
--  DDL for Table OCI_SUBSCRIPTIONS_PY
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."OCI_SUBSCRIPTIONS_PY" 
   (	"SUBSCRIPTION_ID" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"ISO_CODE" VARCHAR2(10) COLLATE "USING_NLS_COMP", 
	"NAME" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"STD_PRECISION" NUMBER, 
	"SERVICE_NAME" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"STATUS" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"AVAILABLE_AMOUNT" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"BOOKING_OPTY_NUMBER" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"COMMITMENT_SERVICES" CLOB COLLATE "USING_NLS_COMP", 
	"CSI" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"DATA_CENTER_REGION" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"FUNDED_ALLOCATION_VALUE" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"ID" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"IS_INTENT_TO_PAY" VARCHAR2(10) COLLATE "USING_NLS_COMP", 
	"NET_UNIT_PRICE" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"OPERATION_TYPE" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"ORDER_NUMBER" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"ORIGINAL_PROMO_AMOUNT" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"PARTNER_TRANSACTION_TYPE" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"PRICING_MODEL" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"PRODUCT_NAME" VARCHAR2(200) COLLATE "USING_NLS_COMP", 
	"PRODUCT_PART_NUMBER" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"PRODUCT_PROVISIONING_GROUP" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"PRODUCT_UNIT_OF_MEASURE" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"PROGRAM_TYPE" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"PROMO_TYPE" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"QUANTITY" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"SUBSTATUS" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"TIME_END" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"TIME_START" VARCHAR2(50) COLLATE "USING_NLS_COMP", 
	"TOTAL_VALUE" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"USED_AMOUNT" VARCHAR2(100) COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
--------------------------------------------------------
--  DDL for Table OCI_SUBSCRIPTION_DETAILS
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."OCI_SUBSCRIPTION_DETAILS" 
   (	"SUBSCRIPTION_ID" NUMBER, 
	"START_DATE" DATE, 
	"END_DATE" DATE, 
	"COMMITED_CREDITS" NUMBER, 
	"CREDITS_CONSUMED" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"CREDITS_CONSUMED_DATE" DATE, 
	"ORDER_NAME" VARCHAR2(128) COLLATE "USING_NLS_COMP", 
	"CURRENCY" VARCHAR2(20) COLLATE "USING_NLS_COMP", 
	"ORDER_ID" NUMBER
   )  DEFAULT COLLATION "USING_NLS_COMP" ;

  CREATE BITMAP INDEX "OCI_FOCUS_REPORTS"."IDX_OCI_CC" ON "OCI_FOCUS_REPORTS"."OCI_SUBSCRIPTION_DETAILS" ("CREDITS_CONSUMED");
  CREATE BITMAP INDEX "OCI_FOCUS_REPORTS"."IDX_OCI_CURRENCY" ON "OCI_FOCUS_REPORTS"."OCI_SUBSCRIPTION_DETAILS" ("CURRENCY");
--------------------------------------------------------
--  DDL for Table OCI_WORKLOADS
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."OCI_WORKLOADS" 
   (	"WORKLOAD_NAME" VARCHAR2(100) COLLATE "USING_NLS_COMP", 
	"VALUE" CLOB COLLATE "USING_NLS_COMP"
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
  ALTER TABLE "OCI_FOCUS_REPORTS"."OCI_WORKLOADS" ADD CONSTRAINT "OCI_WORKLOADS_PK" PRIMARY KEY ("WORKLOAD_NAME")
  USING INDEX  ENABLE;

--------------------------------------------------------
--  DDL for Table PAGE1_CONS_WRKLD_MONTH_CHART_DATA
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."PAGE1_CONS_WRKLD_MONTH_CHART_DATA" 
   (	"WORKLOAD_NAME" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
	"MONTH" DATE, 
	"COST" NUMBER, 
	"LAST_REFRESH" DATE
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
  ALTER TABLE "OCI_FOCUS_REPORTS"."PAGE1_CONS_WRKLD_MONTH_CHART_DATA" ADD PRIMARY KEY ("WORKLOAD_NAME", "MONTH")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  DDL for Table PAGE1_CONS_WRKLD_WEEK_CHART_DATA
--------------------------------------------------------

  CREATE TABLE "OCI_FOCUS_REPORTS"."PAGE1_CONS_WRKLD_WEEK_CHART_DATA" 
   (	"WORKLOAD_NAME" VARCHAR2(400) COLLATE "USING_NLS_COMP", 
	"WEEK_START" DATE, 
	"COST" NUMBER, 
	"LAST_REFRESH" DATE
   )  DEFAULT COLLATION "USING_NLS_COMP" ;
  ALTER TABLE "OCI_FOCUS_REPORTS"."PAGE1_CONS_WRKLD_WEEK_CHART_DATA" ADD PRIMARY KEY ("WORKLOAD_NAME", "WEEK_START")
  USING INDEX  ENABLE;
--------------------------------------------------------
--  DDL for Materialized View FILTER_VALUES_MV
--------------------------------------------------------

  CREATE MATERIALIZED VIEW "OCI_FOCUS_REPORTS"."FILTER_VALUES_MV" ("SUBACCOUNTNAME", "BILLINGACCOUNTID", "REGION", "OCI_COMPARTMENTID", "SERVICECATEGORY", "SERVICENAME", "CHARGEDESCRIPTION", "RESOURCETYPE", "RESOURCEID", "RESOURCENAME")
  DEFAULT COLLATION "USING_NLS_COMP"  SEGMENT CREATION IMMEDIATE
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 10 MAXTRANS 255 
 COLUMN STORE COMPRESS FOR QUERY HIGH ROW LEVEL LOCKING LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  BUILD IMMEDIATE
  USING INDEX 
  REFRESH COMPLETE ON DEMAND
  USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE DISABLE CONCURRENT REFRESH
  AS SELECT DISTINCT
  fr.SUBACCOUNTNAME,
  fr.BILLINGACCOUNTID,
  fr.REGION,
  fr.OCI_COMPARTMENTID,
  fr.SERVICECATEGORY,
  fr.SERVICENAME,
  fr.CHARGEDESCRIPTION,
  fr.RESOURCETYPE,
  fr.RESOURCEID,
  r.DISPLAY_NAME AS RESOURCENAME
FROM FOCUS_REPORTS_PY fr
LEFT JOIN OCI_RESOURCES_PY r
  ON r.IDENTIFIER = fr.RESOURCEID
  WHERE fr.REGION != 'Commitment Expiration';

   COMMENT ON MATERIALIZED VIEW "OCI_FOCUS_REPORTS"."FILTER_VALUES_MV"  IS 'snapshot table for snapshot OCI_FOCUS_REPORTS.FILTER_VALUES_MV';
--------------------------------------------------------
--  DDL for Materialized View RATECARD_MV
--------------------------------------------------------

  CREATE MATERIALIZED VIEW "OCI_FOCUS_REPORTS"."RATECARD_MV" ("CHARGEDESCRIPTION", "PRICINGUNIT", "SKUID", "ACTUALUNITPRICE", "LISTUNITPRICE")
  DEFAULT COLLATION "USING_NLS_COMP"  SEGMENT CREATION IMMEDIATE
  ORGANIZATION HEAP PCTFREE 10 PCTUSED 40 INITRANS 10 MAXTRANS 255 
 COLUMN STORE COMPRESS FOR QUERY HIGH ROW LEVEL LOCKING LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  BUILD IMMEDIATE
  USING INDEX 
  REFRESH COMPLETE ON DEMAND START WITH sysdate+0 NEXT TO_DATE(SYSDATE + 1)
  USING DEFAULT LOCAL ROLLBACK SEGMENT
  USING ENFORCED CONSTRAINTS DISABLE ON QUERY COMPUTATION DISABLE QUERY REWRITE DISABLE CONCURRENT REFRESH
  AS SELECT 
    CHARGEDESCRIPTION, 
    PRICINGUNIT,
    MIN(SKUID) AS SKUID, 
    AVG(ROUND(EFFECTIVECOST/PRICINGQUANTITY, 4)) AS ACTUALUNITPRICE, 
    MAX(LISTUNITPRICE) AS LISTUNITPRICE
FROM 
    FOCUS_REPORTS_PY
WHERE 
    PRICINGQUANTITY > 0
AND CHARGEDESCRIPTION NOT LIKE UPPER('%FREE%')
AND BILLINGACCOUNTID='9379274'
AND CHARGECATEGORY='Usage'
GROUP BY 
    BILLINGACCOUNTID, 
    CHARGEDESCRIPTION, 
    PRICINGUNIT;

   COMMENT ON MATERIALIZED VIEW "OCI_FOCUS_REPORTS"."RATECARD_MV"  IS 'snapshot table for snapshot USAGE.RATECARD_MV';

--------------------------------------------------------
--  DDL for Function json_escape
--------------------------------------------------------
CREATE OR REPLACE FUNCTION json_escape(p_text IN VARCHAR2) RETURN VARCHAR2 IS
  l_result VARCHAR2(32767);
BEGIN
  l_result := REPLACE(p_text, '\', '\\');        -- escape backslashes
  l_result := REPLACE(l_result, '"', '\"');      -- escape double quotes
  l_result := REPLACE(l_result, CHR(10), '\n');  -- line feed
  l_result := REPLACE(l_result, CHR(13), '');    -- carriage return
  RETURN l_result;
END;
/

--------------------------------------------------------
--  DDL for Procedure PAGE1_CONS_WRKLD_MONTH_CHART_DATA_PROC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "OCI_FOCUS_REPORTS"."PAGE1_CONS_WRKLD_MONTH_CHART_DATA_PROC" AS
  l_title   VARCHAR2(400);
  l_value   CLOB;
BEGIN
  -- Truncate the table once before processing
  EXECUTE IMMEDIATE 'TRUNCATE TABLE PAGE1_CONS_WRKLD_MONTH_CHART_DATA';

  -- Loop through top N rows by row_number
  FOR rec IN (
    SELECT DBMS_LOB.SUBSTR(WORKLOAD_NAME, 4000) AS WORKLOAD_NAME,
           DBMS_LOB.SUBSTR(VALUE, 4000) AS COMPARTMENTS,
           ROW_NUMBER() OVER (ORDER BY WORKLOAD_NAME) AS rn
    FROM OCI_WORKLOADS
    WHERE VALUE IS NOT NULL
  ) LOOP
    -- Skip empty compartment lists
    IF rec.COMPARTMENTS IS NOT NULL THEN
      -- Insert aggregated data
      INSERT INTO PAGE1_CONS_WRKLD_MONTH_CHART_DATA (
        WORKLOAD_NAME,
        MONTH,
        COST,
        LAST_REFRESH
      )
      SELECT
        rec.WORKLOAD_NAME,
        TRUNC(CHARGEPERIODEND, 'MM') AS MONTH,
        SUM(BILLEDCOST) AS COST,
        SYSDATE
      FROM FOCUS_REPORTS_PY
      WHERE CHARGEPERIODEND >= ADD_MONTHS(TRUNC(SYSDATE, 'MM'), -12)
        AND OCI_COMPARTMENTID IN (
          SELECT TRIM(column_value)
          FROM TABLE(APEX_STRING.SPLIT(rec.COMPARTMENTS, ','))
        )
      GROUP BY TRUNC(CHARGEPERIODEND, 'MM');
    END IF;
  END LOOP;
  -- Ensure all changes are committed
  COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure PAGE1_CONS_WRKLD_WEEK_CHART_DATA_PROC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "OCI_FOCUS_REPORTS"."PAGE1_CONS_WRKLD_WEEK_CHART_DATA_PROC" AS
  l_title   VARCHAR2(400);
  l_value   CLOB;
BEGIN
  -- Truncate the entire table before inserting fresh data
  EXECUTE IMMEDIATE 'TRUNCATE TABLE PAGE1_CONS_WRKLD_WEEK_CHART_DATA';

  -- Loop through top N rows by row_number
  FOR rec IN (
    SELECT DBMS_LOB.SUBSTR(WORKLOAD_NAME, 4000) AS WORKLOAD_NAME,
           DBMS_LOB.SUBSTR(VALUE, 4000) AS COMPARTMENTS,
           ROW_NUMBER() OVER (ORDER BY WORKLOAD_NAME) AS rn
    FROM OCI_WORKLOADS
    WHERE VALUE IS NOT NULL
  ) LOOP
    -- Skip if compartment list is empty
    IF rec.COMPARTMENTS IS NOT NULL THEN
      -- Insert new aggregated data
      INSERT INTO PAGE1_CONS_WRKLD_WEEK_CHART_DATA (
        WORKLOAD_NAME,
        WEEK_START,
        COST,
        LAST_REFRESH
      )
      SELECT
        rec.WORKLOAD_NAME,
        TRUNC(CHARGEPERIODEND, 'IW') AS WEEK_START,
        SUM(BILLEDCOST) AS COST,
        SYSDATE
      FROM FOCUS_REPORTS_PY
      WHERE CHARGEPERIODEND >= TRUNC(SYSDATE, 'IW') - INTERVAL '56' DAY
        AND CHARGEPERIODEND < TRUNC(SYSDATE, 'IW') -- Exclude current week
        AND OCI_COMPARTMENTID IN (
          SELECT TRIM(column_value)
          FROM TABLE(APEX_STRING.SPLIT(rec.COMPARTMENTS, ','))
        )
      GROUP BY TRUNC(CHARGEPERIODEND, 'IW');
    END IF;
  END LOOP;
  -- Ensure all changes are committed
  COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure REFRESH_COST_USAGE_TS_PROC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE OCI_FOCUS_REPORTS.REFRESH_COST_USAGE_TS_PROC AS
BEGIN
  -- Truncate all three tables
  EXECUTE IMMEDIATE 'TRUNCATE TABLE COST_USAGE_TIMESERIES_DAILY';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE COST_USAGE_TIMESERIES_WEEKLY';
  EXECUTE IMMEDIATE 'TRUNCATE TABLE COST_USAGE_TIMESERIES_MONTHLY';

  -- Insert into COST_USAGE_TS_DAY
  INSERT INTO COST_USAGE_TIMESERIES_DAILY (
    DATE_BUCKET, BILLINGACCOUNTID, SUBACCOUNTNAME, INVOICEISSUER, REGION, BILLINGCURRENCY,
    SERVICECATEGORY, SERVICENAME, CHARGEDESCRIPTION, RESOURCETYPE, RESOURCEID, RESOURCENAME,
    SKUID, PRICINGUNIT, OCI_COMPARTMENTID, OCI_COMPARTMENTNAME, OCI_COMPARTMENT_PATH, USAGEUNIT,
    COST, USAGE, LAST_REFRESH
  )
  SELECT
    TRUNC(fr.CHARGEPERIODSTART, 'DDD'),
    fr.BILLINGACCOUNTID, fr.SUBACCOUNTNAME, fr.INVOICEISSUER, fr.REGION, fr.BILLINGCURRENCY,
    NVL(fr.SERVICECATEGORY, 'None'), fr.SERVICENAME, fr.CHARGEDESCRIPTION, fr.RESOURCETYPE, fr.RESOURCEID,
    orp.DISPLAY_NAME AS RESOURCENAME,
    fr.SKUID, fr.PRICINGUNIT, fr.OCI_COMPARTMENTID, fr.OCI_COMPARTMENTNAME, ocp.PATH, fr.USAGEUNIT,
    SUM(fr.BILLEDCOST),
    SUM(
      CASE
        WHEN LOWER(fr.USAGEUNIT) LIKE '%month%' THEN fr.USAGEQUANTITY * (730 / 24)
        ELSE fr.USAGEQUANTITY / 24
      END
    ),
    SYSDATE
  FROM FOCUS_REPORTS_PY fr
  LEFT JOIN OCI_RESOURCES_PY orp ON fr.RESOURCEID = orp.IDENTIFIER
  LEFT JOIN OCI_COMPARTMENTS_PY ocp ON fr.OCI_COMPARTMENTID = ocp.COMPARTMENT_ID
  WHERE fr.CHARGEPERIODEND <= ADD_MONTHS(fr.CHARGEPERIODSTART, 7)
  GROUP BY
    TRUNC(fr.CHARGEPERIODSTART, 'DDD'),
    fr.BILLINGACCOUNTID, fr.SUBACCOUNTNAME, fr.INVOICEISSUER, fr.REGION, fr.BILLINGCURRENCY,
    fr.SERVICECATEGORY, fr.SERVICENAME, fr.CHARGEDESCRIPTION, fr.RESOURCETYPE, fr.RESOURCEID,
    orp.DISPLAY_NAME, fr.SKUID, fr.PRICINGUNIT, fr.OCI_COMPARTMENTID, fr.OCI_COMPARTMENTNAME,
    ocp.PATH, fr.USAGEUNIT;

  -- Repeat for WEEK
  INSERT INTO COST_USAGE_TIMESERIES_WEEKLY (
    DATE_BUCKET, BILLINGACCOUNTID, SUBACCOUNTNAME, INVOICEISSUER, REGION, BILLINGCURRENCY,
    SERVICECATEGORY, SERVICENAME, CHARGEDESCRIPTION, RESOURCETYPE, RESOURCEID, RESOURCENAME,
    SKUID, PRICINGUNIT, OCI_COMPARTMENTID, OCI_COMPARTMENTNAME, OCI_COMPARTMENT_PATH, USAGEUNIT,
    COST, USAGE, LAST_REFRESH
  )
  SELECT
    TRUNC(fr.CHARGEPERIODSTART, 'IW'),
    fr.BILLINGACCOUNTID, fr.SUBACCOUNTNAME, fr.INVOICEISSUER, fr.REGION, fr.BILLINGCURRENCY,
    NVL(fr.SERVICECATEGORY, 'None'), fr.SERVICENAME, fr.CHARGEDESCRIPTION, fr.RESOURCETYPE, fr.RESOURCEID,
    orp.DISPLAY_NAME AS RESOURCENAME,
    fr.SKUID, fr.PRICINGUNIT, fr.OCI_COMPARTMENTID, fr.OCI_COMPARTMENTNAME, ocp.PATH, fr.USAGEUNIT,
    SUM(fr.BILLEDCOST),
    SUM(
      CASE
        WHEN LOWER(fr.USAGEUNIT) LIKE '%month%' THEN fr.USAGEQUANTITY * (730 / 24)
        ELSE fr.USAGEQUANTITY / 24
      END
    ),
    SYSDATE
  FROM FOCUS_REPORTS_PY fr
  LEFT JOIN OCI_RESOURCES_PY orp ON fr.RESOURCEID = orp.IDENTIFIER
  LEFT JOIN OCI_COMPARTMENTS_PY ocp ON fr.OCI_COMPARTMENTID = ocp.COMPARTMENT_ID
  WHERE fr.CHARGEPERIODEND <= ADD_MONTHS(fr.CHARGEPERIODSTART, 7)
  GROUP BY
    TRUNC(fr.CHARGEPERIODSTART, 'IW'),     
    fr.BILLINGACCOUNTID, fr.SUBACCOUNTNAME, fr.INVOICEISSUER, fr.REGION, fr.BILLINGCURRENCY,
    fr.SERVICECATEGORY, fr.SERVICENAME, fr.CHARGEDESCRIPTION, fr.RESOURCETYPE, fr.RESOURCEID,
    orp.DISPLAY_NAME, fr.SKUID, fr.PRICINGUNIT, fr.OCI_COMPARTMENTID, fr.OCI_COMPARTMENTNAME,
    ocp.PATH, fr.USAGEUNIT;

  -- Repeat for MONTH
  INSERT INTO COST_USAGE_TIMESERIES_MONTHLY (
    DATE_BUCKET, BILLINGACCOUNTID, SUBACCOUNTNAME, INVOICEISSUER, REGION, BILLINGCURRENCY,
    SERVICECATEGORY, SERVICENAME, CHARGEDESCRIPTION, RESOURCETYPE, RESOURCEID, RESOURCENAME,
    SKUID, PRICINGUNIT, OCI_COMPARTMENTID, OCI_COMPARTMENTNAME, OCI_COMPARTMENT_PATH, USAGEUNIT,
    COST, USAGE, LAST_REFRESH
  )
  SELECT
    TRUNC(fr.CHARGEPERIODSTART, 'MM'), 
    fr.BILLINGACCOUNTID, fr.SUBACCOUNTNAME, fr.INVOICEISSUER, fr.REGION, fr.BILLINGCURRENCY,
    NVL(fr.SERVICECATEGORY, 'None'), fr.SERVICENAME, fr.CHARGEDESCRIPTION, fr.RESOURCETYPE, fr.RESOURCEID,
    orp.DISPLAY_NAME AS RESOURCENAME,
    fr.SKUID, fr.PRICINGUNIT, fr.OCI_COMPARTMENTID, fr.OCI_COMPARTMENTNAME, ocp.PATH, fr.USAGEUNIT,
    SUM(fr.BILLEDCOST),
    SUM(
      CASE
        WHEN LOWER(fr.USAGEUNIT) LIKE '%month%' THEN fr.USAGEQUANTITY * (730 / 24)
        ELSE fr.USAGEQUANTITY / 24
      END
    ),
    SYSDATE
  FROM FOCUS_REPORTS_PY fr
  LEFT JOIN OCI_RESOURCES_PY orp ON fr.RESOURCEID = orp.IDENTIFIER
  LEFT JOIN OCI_COMPARTMENTS_PY ocp ON fr.OCI_COMPARTMENTID = ocp.COMPARTMENT_ID
  WHERE fr.CHARGEPERIODEND <= ADD_MONTHS(fr.CHARGEPERIODSTART, 7)
  GROUP BY
    TRUNC(fr.CHARGEPERIODSTART, 'MM'),     
    fr.BILLINGACCOUNTID, fr.SUBACCOUNTNAME, fr.INVOICEISSUER, fr.REGION, fr.BILLINGCURRENCY,
    fr.SERVICECATEGORY, fr.SERVICENAME, fr.CHARGEDESCRIPTION, fr.RESOURCETYPE, fr.RESOURCEID,
    orp.DISPLAY_NAME, fr.SKUID, fr.PRICINGUNIT, fr.OCI_COMPARTMENTID, fr.OCI_COMPARTMENTNAME,
    ocp.PATH, fr.USAGEUNIT;
  COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure REFRESH_CREDIT_USAGE_AGG_PROC
--------------------------------------------------------
set define off;

  CREATE OR REPLACE EDITIONABLE PROCEDURE "OCI_FOCUS_REPORTS"."REFRESH_CREDIT_USAGE_AGG_PROC" AS
BEGIN
  EXECUTE IMMEDIATE 'TRUNCATE TABLE CREDIT_USAGE_AGG';

  INSERT INTO CREDIT_USAGE_AGG (BILLINGACCOUNTID, CHARGEPERIODEND, BILLEDCOST, HOURLY_COST)
  SELECT
    BILLINGACCOUNTID,
    TRUNC(CHARGEPERIODEND, 'HH') AS CHARGEPERIODEND,
    SUM(BILLEDCOST) AS BILLEDCOST,
    SUM(BILLEDCOST) / 1 AS HOURLY_COST
  FROM FOCUS_REPORTS_PY
  WHERE CHARGEPERIODEND >= SYSDATE - 30  -- or -90 for 3 months of history
  GROUP BY BILLINGACCOUNTID, TRUNC(CHARGEPERIODEND, 'HH');

  COMMIT;
END;

/
